1. node.js 설치
2. package 설정
 - vscode에서 터미널을 켜서 npm init 명령 입력 
   > npm이란? 라이브러리 설치를 도와주는 도구
3. express 라이브러리 설치
 - npm install express  : 서버를 쉽게 설치하기 위한 툴
 - 맥은 : yarn add express
4. Basic GET request
 - server.js 작성
 - 서버끄는법 터미널에서 ctrl + c
5. 서버 on/off 자동화
 - npm install -g nodemon
 - -g : 내 모든 폴더에서 nodemon을 설치하게 해주세요~ 
 - 서버 키기 : nodemon server.js
   > 권한 오류발생
   > powerShell 관리자 모드로 키기
   > executionpolicy 입력 : 현재 권한 가진 친구 보는법
   > set-executionpolicy unrestricted : 실행 규칙 변경
   > Y 입력
 - 글자만 변경하는 순간 서버를 재실행 해준다.
6. body-parser 
 - POST req를 받기 위함
 - npm install boddy-parser

7. https://cloud.mongodb.com/
 - Get Started에 있는 3단계까지 진행.

8. MongoDB install
 - npm install mongodb@3.6.4
 
9. EJS 라이브러리 설치
 - html을 더 쓰기 쉽게 해주는 템플릿/전처리 엔진
 - npm install ejs
 - <%= %> 사이에 작성
 - 반드시 views 폴더 내에서만 작성되어야 함.





<뭔가의 내가 모르던 개념>
 - npm : 노드 패키지 매니저

 - 왜 콜백 함수를 쓰는가?
  > 순차적으로 실행하고 싶을 때 사용한다.
  >>> '순차적'보다는 다른 작업이 끝나길 '기다리고' 실행하는 느낌
  ex) 어떤 주소로 접근을 했을 때, 페이지를 띄워주세요!
  ex) 주소로 접근했을 때 모든 데이터를 '다 받고' 페이지를 띄울래!
  > 대표적 예시 : .get

 - get
  > .get('경로', function(요청내용, 응답방법){})
  > ES6의 신문법 : .get('경로', (요청내용, 응답방법) => {})

 - <form> 
  > 태그의 method는 전송누를 시 GET요청 or POST 요청 선택
  > POST GET DELETE PUT
  > from 안의 button은 기본적으로 submit 속성을 띈다.
  > form에서 전송된 데이터는 post의 function(req, res)의 req에 있다.

 - REST API
  > "REST API에 의거하면 예쁜 서버가 된다."
  > 웹개발의 API란? : 서버와 고객간의 요청방식/규약
  > REST : Representational State Transfer
  > API : Application Programming Interface
  > Roy Fielding씨가 REST 원칙을 쓰면 인터넷 세상이 아름다워 질 것이다 주장
  >>> 국룰이 됨
  >>> 이걸 잘 지키면 RESTFUL하다~

 - REST API 6원칙
  > Uniform interface : 하나의 자료는 하나의 URL로
  > Client-Sever 역할 구분 : 브라우저는 요청만 서버는 응답만 하라
  > Stateless : 요청1과 요청2는 의존성이 없어야 함
  > Cacheable : 서버의 전송 정보는 캐싱이 가능해야함, 이를 위한 이쁜 버전 관리
  > Layered System
  > Code on Demand


 - 좋은 REST API를 위한 이름짓기
  > URL을 명사로 작성
  > 하위문서를 나타낼 때는 /
  > 파일확장자 쓰지 말기 ex) html
  > 띄어쓰기는 대시(-) 사용
  > 자료하나당 하나의 URL

 - DB와 Collections의 관계 : 폴더와 엑셀파일

 - ejs에서 서버 데이터 가져오기
  > <% %> : js 코드 사용하기
  > <%= %> : ejs 코드 사용하기





















